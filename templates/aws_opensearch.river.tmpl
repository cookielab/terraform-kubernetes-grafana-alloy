declare "aws_opensearch" {
  argument "metrics_output" {
    optional = false
    comment  = "Where to send Prometheus metrics"
  }

  argument "region" {
    optional = false
    comment  = "Aws region for metrics"
  }

  argument "scrape_interval" {
    optional = true
    default  = ${scrape_interval}
    comment  = "How often to scrape"
  }

  argument "scrape_timeout" {
    optional = true
    default  = ${scrape_timeout}
    comment  = "How long to wait before timing out"
  }

  argument "scrape_period" {
    optional = true
    default  = ${scrape_period}
    comment  = "Scrape period settings"
  }

  prometheus.exporter.cloudwatch "opensearchcluster" {
    sts_region = ${region}
    fips_disabled = true
    discovery {
      type        = "AWS/ES"
      regions     = [argument.region.value]

      metric {
        name       = "ClusterIndexWritesBlocked"
        statistics = ["Maximum"]
        period     = argument.scrape_period.value
      }

      metric {
        name       = "ClusterStatus.red"
        statistics = ["Maximum"]
        period     = argument.scrape_period.value
      }

      metric {
        name       = "ClusterStatus.yellow"
        statistics = ["Maximum"]
        period     = argument.scrape_period.value
      }

      metric {
        name       = "Shards.active"
        statistics = ["Sum"]
        period     = argument.scrape_period.value
      }

      metric {
        name       = "Shards.initializing"
        statistics = ["Sum"]
        period     = argument.scrape_period.value
      }

      metric {
        name       = "Shards.unassigned"
        statistics = ["Sum"]
        period     = argument.scrape_period.value
      }

      metric {
        name       = "Shards.relocating"
        statistics = ["Sum"]
        period     = argument.scrape_period.value
      }

      metric {
        name       = "Shards.activePrimary"
        statistics = ["Sum"]
        period     = argument.scrape_period.value
      }

      metric {
        name       = "SysMemoryUtilization"
        statistics = ["Maximum"]
        period     = argument.scrape_period.value
      }

      metric {
        name       = "MasterSysMemoryUtilization"
        statistics = ["Maximum"]
        period     = argument.scrape_period.value
      }

      metric {
        name       = "WarmSysMemoryUtilization"
        statistics = ["Maximum"]
        period     = argument.scrape_period.value
      }

      metric {
        name       = "WarmJVMMemoryPressure"
        statistics = ["Maximum"]
        period     = argument.scrape_period.value
      }
      
      metric {
        name       = "Nodes"
        statistics = ["Sum"]
        period     = argument.scrape_period.value
      }

      metric {
        name       = "CPUUtilization"
        statistics = ["Maximum"]
        period     = argument.scrape_period.value
      }

      metric {
        name       = "OpenSearchRequests"
        statistics = ["Sum"]
        period     = argument.scrape_period.value
      }

      metric {
        name       = "JVMMemoryPressure"
        statistics = ["Maximum"]
        period     = argument.scrape_period.value
      }

      metric {
        name       = "4xx"
        statistics = ["Maximum"]
        period     = argument.scrape_period.value
      }

      metric {
        name       = "5xx"
        statistics = ["Maximum"]
        period     = argument.scrape_period.value
      }

      metric {
        name       = "IopsThrottle"
        statistics = ["Maximum"]
        period     = argument.scrape_period.value
      }
    }
  }


  prometheus.scrape "opensearchcluster" {
    scrape_interval = argument.scrape_interval.value
    scrape_timeout  = argument.scrape_timeout.value

    targets    = prometheus.exporter.cloudwatch.opensearchcluster.targets
    forward_to = [argument.metrics_output.value]
  }
}

